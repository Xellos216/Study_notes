n = int(input())
# 회의 개수 n을 입력받아 정수로 변환한다.

meetings = [tuple(map(int, input().split())) for _ in range(n)]
# 각 회의의 시작/끝 시간을 입력 받는다.
# 총 n번 반복해서, 입력 문자열을 정수 2개로 나눈 뒤, 튜플 형태로 저장한다.
# 결과: [(1, 4), (3, 5), (0, 6), ...] 형태의 리스트가 만들어짐.

meetings.sort(key = lambda x : (x[1], x[0]))
# 회의 리스트를 정한다.
# 정렬 기준은 '끝나는 시간(x[1]) 오름차순', 같은 경우 '시작 시간(x[0]) 오름차순'
# 빠르게 끝나는 회의를 먼저 배치해야 다음 회의를 더 많이 넣을 수 있기 때문

count = 0
# 사용할 회의 개수 세기용 변수
end_time = 0
# 마지막에 선택된 회의의 종료 시간을 저장

for start, end in meetings:
# meetings 리스트에 있는 회의들을 하나씩 꺼내서
# 각각 시작 시간과 끝 시간을 start, end에 저장하고 반복함

  if start >= end_time:
# 지금 회의 시작 시간이 이전 회의의 종료 시간보다 같거나 늦으면 (= 겹치지 않으면)

     count += 1   # 회의 수 하나 추가
     end_time = end   # 현재 회의의 끝나는 시간을 업데이트

print(count)
# 최대 몇 개의 회의를 선택할 수 있는 지 출력
